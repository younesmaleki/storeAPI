# Generated by Django 5.0.4 on 2024-04-11 02:40

import ckeditor.fields
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fa_name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fa_name', models.CharField(blank=True, max_length=100, unique=True, verbose_name='fa-name')),
                ('en_name', models.CharField(blank=True, max_length=100, unique=True, verbose_name='en-name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='covers/product_image/', verbose_name='Product Image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='size')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='tags')),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fa_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attribute_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='single_attribute', to='store.attributecategory')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(verbose_name='Values of Attribute')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='value', to='store.attribute')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fa_name', models.CharField(max_length=100, unique=True, verbose_name='fa-name')),
                ('en_name', models.CharField(max_length=100, unique=True, verbose_name='en-name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='brand description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand_logo/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('fa_name', 'en_name')},
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fa_name', models.CharField(max_length=100, unique=True, verbose_name='category fa-name')),
                ('en_name', models.CharField(max_length=100, unique=True, verbose_name='category en-name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='store.category')),
            ],
            options={
                'unique_together': {('fa_name', 'parent')},
            },
        ),
        migrations.AddField(
            model_name='attribute',
            name='categories',
            field=models.ManyToManyField(related_name='attributes', to='store.category'),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=500)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to='store.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=700, verbose_name='address')),
                ('order_note', models.CharField(blank=True, max_length=1000, verbose_name='Order Note')),
                ('post_code', models.CharField(max_length=25, verbose_name='Post Code')),
                ('status', models.CharField(choices=[('p', 'paid'), ('u', 'unpaid'), ('c', 'cancel')], default='u', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fa_name', models.CharField(max_length=255, verbose_name='Farsi Product Name')),
                ('en_name', models.CharField(max_length=255, verbose_name='English Product Name')),
                ('model', models.CharField(blank=True, max_length=255, verbose_name='Product Model')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('short_description', models.CharField(max_length=5000, verbose_name='Product Short Description')),
                ('full_description', ckeditor.fields.RichTextField(verbose_name='Product Full Description')),
                ('thumbnail', models.ImageField(upload_to='covers/product_thumbnail/')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, verbose_name='Product Gender')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views', models.PositiveBigIntegerField(default=0)),
                ('attributes', models.ManyToManyField(related_name='products', through='store.AttributeValue', to='store.attribute', verbose_name='Product Attribute')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='store.brand', verbose_name='Brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='store.category', verbose_name='Category')),
                ('images', models.ManyToManyField(blank=True, related_name='products', to='store.image', verbose_name='Product Images')),
                ('sizes', models.ManyToManyField(blank=True, related_name='products', to='store.size', verbose_name='Product Sizes')),
                ('tags', models.ManyToManyField(to='store.tag', verbose_name='Product Tags')),
            ],
            options={
                'unique_together': {('fa_name', 'brand', 'model')},
            },
        ),
        migrations.AddField(
            model_name='attributevalue',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attribute_values', to='store.product'),
        ),
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Comment Text')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('product_stars', models.CharField(choices=[('1', 'Very Bad'), ('2', 'Bad'), ('3', 'normal'), ('4', 'Good'), ('5', 'Perfect')], max_length=1, verbose_name='Rate of Product')),
                ('comment_status', models.CharField(choices=[('w', 'waiting'), ('a', 'approved'), ('na', 'Not approved')], default='a', max_length=2)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, max_length=80, unique=True)),
                ('inventory', models.PositiveIntegerField(default=0, verbose_name='Variant Inventory')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='color_variant', to='store.color', verbose_name='Color Variant')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='variants', to='store.product', verbose_name='Product Variant')),
                ('size', models.ForeignKey(default='41', on_delete=django.db.models.deletion.PROTECT, related_name='variant_size', to='store.size', verbose_name='Size Variant')),
            ],
            options={
                'unique_together': {('product', 'color', 'size')},
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('price', models.PositiveIntegerField()),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='store.discount')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.order')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.variant')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('price', models.PositiveIntegerField()),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.cart')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cart_items', to='store.discount')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.variant')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='attribute',
            unique_together={('fa_name', 'attribute_category')},
        ),
        migrations.AlterUniqueTogether(
            name='attributevalue',
            unique_together={('product', 'attribute')},
        ),
        migrations.CreateModel(
            name='VariantPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField()),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='price', to='store.discount')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_price', to='store.variant', unique=True)),
            ],
            options={
                'unique_together': {('variant', 'price')},
            },
        ),
    ]
